name: Publish Documentation

# -----------------------------------------------------
# Workflow Triggers
# -----------------------------------------------------
on:
  push:
    branches:
      - main         # Run workflow when code is pushed to the main branch
    tags:
      - 'v*'         # Run workflow when a tag starting with 'v' is pushed (semantic versioning)
  workflow_dispatch:  # Allows manual triggering of the workflow from GitHub Actions UI

# -----------------------------------------------------
# Permissions
# -----------------------------------------------------
permissions:
  contents: write    # Required to push documentation to gh-pages branch

# -----------------------------------------------------
# Jobs
# -----------------------------------------------------
jobs:
  publish:
    name: Publish documentation
    # Only run on main branch or when manually triggered
    if: github.ref == 'refs/heads/main' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest   # Use the latest Ubuntu runner

    steps:
      # Checkout the repository code to make it available to the workflow
      - name: Checkout Code
        uses: actions/checkout@v4

      # Set up Python 3.12 and enable pip caching for faster builds
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      # Install Poetry just like in the previous job
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3
        with:
          poetry-version: '2.1.2'
          poetry-plugins: 'poetry-dynamic-versioning[plugin]'

      # Disable virtual environment creation (install dependencies globally in the runner)
      - name: Configure Poetry
        run: poetry config virtualenvs.create false

      # Install dependencies but not root project
      - name: Install dependencies
        run: poetry install --no-root

      # Generate version information from git tags and commit history and write it
      # into VERSION file for later use
      - name: Extract version information
        run: python generate_version.py

      # Build HTML documentation using Sphinx
      # - Source files located in doc/
      # - Output built documentation to doc/_build/
      # - Create a .nojekyll file to ensure GitHub Pages does not ignore files starting with underscores
      - name: Build documentation
        run: |
          poetry run sphinx-build -b html doc/ doc/_build/
          touch doc/_build/.nojekyll

      # Deploy the built documentation to GitHub Pages
      # - Only runs if previous steps succeeded
      # - Pushes the contents of doc/_build/ to the gh-pages branch
      # - Uses GITHUB_TOKEN secret for authentication
      - name: Deploy to GitHub Pages
        if: success()
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: doc/_build/
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
